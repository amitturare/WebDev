function makeRequest(location) {
    return new Promise((resolve, reject) => {
        console.log(`Making request to ${location}`);
        if (location === 'Google') {
            resolve('Google says hi');
        } else {
            reject('You can only talk to Google');
        }
    });
}

function processRequest(response) {
    return new Promise((resolve, reject) => {
        console.log('Processing response');
        resolve(`Extra Information + ${response}`);
    });
}

// WHEN USING PROMISE SYNTAX
// makeRequest('Google')
//     .then((response) => {
//         console.log('Response Received');
//         return processRequest(response);
//     })
//     .then((processedResponse) => console.log(processedResponse))
//     .catch((err) => console.log(err));

// WHEN USING ASYNC AND AWAIT
// You always have to tell JS that the function is a async as shown below
async function doWork() {
    try {
        const response = await makeRequest('Google');
        console.log('Response Received');
        const processedResponse = await processRequest(response);
        console.log(processedResponse);
    } catch (err) {
        console.log(err);
    }
}
doWork();